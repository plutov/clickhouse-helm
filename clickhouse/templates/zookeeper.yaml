apiVersion: v1
kind: Service
metadata:
  name: zk
spec:
  type: ClusterIP
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zk
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
spec:
  serviceName: zk
  replicas: {{ .Values.zookeeper.replicaCount }}
  selector:
    matchLabels:
      app: zk
  template:
    metadata:
      labels:
        app: zk
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      {{- if .Values.zookeeper.affinity }}
      affinity:
{{ toYaml .Values.zookeeper.affinity | indent 8 }}
      {{- end -}}
      {{- if .Values.zookeeper.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.zookeeper.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.zookeeper.tolerations }}
      tolerations:
{{ toYaml .Values.zookeeper.tolerations | indent 8 }}
      {{- end }}
      containers:
      - name: k8szk
        imagePullPolicy: Always
        image: "{{ .Values.zookeeper.repository }}:{{ .Values.zookeeper.tag }}"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name : ZK_ENSEMBLE
          value: "{{range $i, $e := until (atoi (printf "%d" (int64 .Values.zookeeper.replicaCount))) }}zk-{{$i}};{{end}}"
        - name : ZK_HEAP_SIZE
          value: "512M"
        - name : ZK_TICK_TIME
          value: "2000"
        - name : ZK_INIT_LIMIT
          value: "10"
        - name : ZK_SYNC_LIMIT
          value: "5"
        - name : ZK_MAX_CLIENT_CNXNS
          value: "60"
        - name: ZK_SNAP_RETAIN_COUNT
          value: "30"
        - name: ZK_PURGE_INTERVAL
          value: "1"
        - name: ZK_CLIENT_PORT
          value: "2181"
        - name: ZK_SERVER_PORT
          value: "2888"
        - name: ZK_ELECTION_PORT
          value: "3888"
        command:
        - sh
        - -c
        - zkGenConfig.sh && zkServer.sh start-foreground
        readinessProbe:
          exec:
            command:
            - "zkOk.sh"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - "zkOk.sh"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        volumeMounts:
        - name: zookeeper-data
          mountPath: {{ .Values.zookeeper.persistence.mountPath }}
        resources:
{{ toYaml .Values.zookeeper.resources | indent 12 }}
      securityContext:
        runAsUser: 1000
        fsGroup: 1000

  volumeClaimTemplates:
  - metadata:
      name: zookeeper-data
    spec:
      accessModes:
      {{- range .Values.zookeeper.persistence.accessModes }}
        - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.zookeeper.persistence.size }}
